[{"C:\\ReactJs\\store\\src\\index.js":"1","C:\\ReactJs\\store\\src\\reportWebVitals.js":"2","C:\\ReactJs\\store\\src\\App.js":"3","C:\\ReactJs\\store\\src\\components\\Header\\index.jsx":"4","C:\\ReactJs\\store\\src\\components\\Header\\register.jsx":"5","C:\\ReactJs\\store\\src\\components\\Header\\login.jsx":"6","C:\\ReactJs\\store\\src\\components\\Cart\\index.jsx":"7","C:\\ReactJs\\store\\src\\components\\Home\\index.jsx":"8","C:\\ReactJs\\store\\src\\components\\Product\\index.jsx":"9","C:\\ReactJs\\store\\src\\components\\Footer\\index.jsx":"10","C:\\ReactJs\\store\\src\\components\\LoadingBox\\index.jsx":"11","C:\\ReactJs\\store\\src\\components\\ProductCard\\index.jsx":"12","C:\\ReactJs\\store\\src\\store.js":"13","C:\\ReactJs\\store\\src\\reducers\\index.js":"14","C:\\ReactJs\\store\\src\\reducers\\product.js":"15","C:\\ReactJs\\store\\src\\pages\\HomePage.jsx":"16","C:\\ReactJs\\store\\src\\api\\productApi.js":"17","C:\\ReactJs\\store\\src\\api\\axiosClient.js":"18","C:\\ReactJs\\store\\src\\actions\\product.js":"19","C:\\ReactJs\\store\\src\\contants\\productContants.js":"20","C:\\ReactJs\\store\\src\\actions\\fetchProduct.js":"21","C:\\ReactJs\\store\\src\\components\\Paganation\\index.js":"22","C:\\ReactJs\\store\\src\\pages\\CartPage.jsx":"23","C:\\ReactJs\\store\\src\\reducers\\cart.js":"24","C:\\ReactJs\\store\\src\\actions\\cart.js":"25","C:\\ReactJs\\store\\src\\contants\\cartContants.js":"26","C:\\ReactJs\\store\\src\\components\\Cart\\CartItem.jsx":"27","C:\\ReactJs\\store\\src\\utils\\cart.js":"28","C:\\ReactJs\\store\\src\\components\\Alert\\index.jsx":"29","C:\\ReactJs\\store\\src\\reducers\\alert.js":"30","C:\\ReactJs\\store\\src\\contants\\alertContants.js":"31","C:\\ReactJs\\store\\src\\actions\\alert.js":"32","C:\\ReactJs\\store\\src\\reducers\\user.js":"33","C:\\ReactJs\\store\\src\\contants\\userContants.js":"34","C:\\ReactJs\\store\\src\\api\\userApi.js":"35","C:\\ReactJs\\store\\src\\actions\\user.js":"36","C:\\ReactJs\\store\\src\\pages\\UserPage.jsx":"37","C:\\ReactJs\\store\\src\\components\\User\\index.jsx":"38","C:\\ReactJs\\store\\src\\components\\User\\UserForm.jsx":"39","C:\\ReactJs\\store\\src\\components\\Fillter\\index.jsx":"40","C:\\ReactJs\\store\\src\\components\\Product\\Comment.jsx":"41","C:\\ReactJs\\store\\src\\components\\Product\\ComentItem.jsx":"42","C:\\ReactJs\\store\\src\\reducers\\products.js":"43","C:\\ReactJs\\store\\src\\actions\\comment.js":"44","C:\\ReactJs\\store\\src\\contants\\commentContants.js":"45","C:\\ReactJs\\store\\src\\api\\commentApi.js":"46","C:\\ReactJs\\store\\src\\reducers\\comment.js":"47","C:\\ReactJs\\store\\src\\router\\index.js":"48","C:\\ReactJs\\store\\src\\pages\\ProductPage.jsx":"49","C:\\ReactJs\\store\\src\\pages\\LoadingPage.jsx":"50","C:\\ReactJs\\store\\src\\utils\\yupValidationSchema.js":"51","C:\\ReactJs\\store\\src\\pages\\LoginPage.jsx":"52","C:\\ReactJs\\store\\src\\components\\Login\\index.jsx":"53","C:\\ReactJs\\store\\src\\pages\\RegisterPage.jsx":"54","C:\\ReactJs\\store\\src\\components\\Register\\index.jsx":"55","C:\\ReactJs\\store\\src\\components\\Loading\\index.jsx":"56","C:\\ReactJs\\store\\src\\components\\Skeleton\\ProductCardSkeleton.jsx":"57","C:\\ReactJs\\store\\src\\components\\User\\UserMenu.jsx":"58","C:\\ReactJs\\store\\src\\pages\\CheckOutPage.jsx":"59","C:\\ReactJs\\store\\src\\components\\CheckOut\\index.jsx":"60","C:\\ReactJs\\store\\src\\components\\CheckOut\\Review.jsx":"61","C:\\ReactJs\\store\\src\\components\\CheckOut\\AddressForm.jsx":"62","C:\\ReactJs\\store\\src\\components\\CheckOut\\PaymentForm.jsx":"63","C:\\ReactJs\\store\\src\\utils\\country.js":"64","C:\\ReactJs\\store\\src\\pages\\SearchPage.jsx":"65"},{"size":759,"mtime":1615050646192,"results":"66","hashOfConfig":"67"},{"size":362,"mtime":499162500000,"results":"68","hashOfConfig":"67"},{"size":957,"mtime":1614570627161,"results":"69","hashOfConfig":"67"},{"size":13148,"mtime":1614960997883,"results":"70","hashOfConfig":"67"},{"size":8102,"mtime":1614093895544,"results":"71","hashOfConfig":"67"},{"size":7233,"mtime":1614093987943,"results":"72","hashOfConfig":"67"},{"size":4617,"mtime":1614268750286,"results":"73","hashOfConfig":"67"},{"size":2744,"mtime":1615049046067,"results":"74","hashOfConfig":"67"},{"size":6623,"mtime":1614594464321,"results":"75","hashOfConfig":"67"},{"size":4872,"mtime":1614174748030,"results":"76","hashOfConfig":"67"},{"size":538,"mtime":1610327513140,"results":"77","hashOfConfig":"67"},{"size":3291,"mtime":1614140714240,"results":"78","hashOfConfig":"67"},{"size":335,"mtime":1610456236591,"results":"79","hashOfConfig":"67"},{"size":515,"mtime":1613839296034,"results":"80","hashOfConfig":"67"},{"size":1113,"mtime":1614257092590,"results":"81","hashOfConfig":"67"},{"size":1590,"mtime":1615050451176,"results":"82","hashOfConfig":"67"},{"size":334,"mtime":1613925773839,"results":"83","hashOfConfig":"67"},{"size":802,"mtime":1614611399661,"results":"84","hashOfConfig":"67"},{"size":1388,"mtime":1615044708597,"results":"85","hashOfConfig":"67"},{"size":559,"mtime":1613450383209,"results":"86","hashOfConfig":"67"},{"size":498,"mtime":1613450479896,"results":"87","hashOfConfig":"67"},{"size":1134,"mtime":1615048038964,"results":"88","hashOfConfig":"67"},{"size":343,"mtime":1614528266009,"results":"89","hashOfConfig":"67"},{"size":2317,"mtime":1614528380702,"results":"90","hashOfConfig":"67"},{"size":661,"mtime":1614267578274,"results":"91","hashOfConfig":"67"},{"size":164,"mtime":1614267392791,"results":"92","hashOfConfig":"67"},{"size":3955,"mtime":1614267639624,"results":"93","hashOfConfig":"67"},{"size":422,"mtime":1611322817801,"results":"94","hashOfConfig":"67"},{"size":828,"mtime":1614528758925,"results":"95","hashOfConfig":"67"},{"size":706,"mtime":1611331898920,"results":"96","hashOfConfig":"67"},{"size":114,"mtime":1611331860289,"results":"97","hashOfConfig":"67"},{"size":295,"mtime":1611331878989,"results":"98","hashOfConfig":"67"},{"size":1917,"mtime":1614658228571,"results":"99","hashOfConfig":"67"},{"size":559,"mtime":1614654590808,"results":"100","hashOfConfig":"67"},{"size":448,"mtime":1614652568067,"results":"101","hashOfConfig":"67"},{"size":1473,"mtime":1614654852920,"results":"102","hashOfConfig":"67"},{"size":569,"mtime":1614656316192,"results":"103","hashOfConfig":"67"},{"size":1533,"mtime":1614594777093,"results":"104","hashOfConfig":"67"},{"size":8557,"mtime":1614793787432,"results":"105","hashOfConfig":"67"},{"size":2561,"mtime":1615049225688,"results":"106","hashOfConfig":"67"},{"size":3410,"mtime":1614866059282,"results":"107","hashOfConfig":"67"},{"size":2587,"mtime":1614950337347,"results":"108","hashOfConfig":"67"},{"size":870,"mtime":1614258164820,"results":"109","hashOfConfig":"67"},{"size":1094,"mtime":1613926932878,"results":"110","hashOfConfig":"67"},{"size":433,"mtime":1613926700082,"results":"111","hashOfConfig":"67"},{"size":504,"mtime":1613925720281,"results":"112","hashOfConfig":"67"},{"size":1681,"mtime":1614875245036,"results":"113","hashOfConfig":"67"},{"size":1487,"mtime":1614960323501,"results":"114","hashOfConfig":"67"},{"size":2024,"mtime":1614594284137,"results":"115","hashOfConfig":"67"},{"size":202,"mtime":1614528126848,"results":"116","hashOfConfig":"67"},{"size":1124,"mtime":1614084674430,"results":"117","hashOfConfig":"67"},{"size":513,"mtime":1614528116402,"results":"118","hashOfConfig":"67"},{"size":7657,"mtime":1614528613578,"results":"119","hashOfConfig":"67"},{"size":531,"mtime":1614528118245,"results":"120","hashOfConfig":"67"},{"size":9955,"mtime":1614652799745,"results":"121","hashOfConfig":"67"},{"size":322,"mtime":1614251583501,"results":"122","hashOfConfig":"67"},{"size":1551,"mtime":1614258123288,"results":"123","hashOfConfig":"67"},{"size":5805,"mtime":1614688999393,"results":"124","hashOfConfig":"67"},{"size":188,"mtime":1614528261277,"results":"125","hashOfConfig":"67"},{"size":5166,"mtime":1614527937108,"results":"126","hashOfConfig":"67"},{"size":3165,"mtime":1614436966343,"results":"127","hashOfConfig":"67"},{"size":5964,"mtime":1614527911565,"results":"128","hashOfConfig":"67"},{"size":1711,"mtime":1614527706236,"results":"129","hashOfConfig":"67"},{"size":1419107,"mtime":1614525087900,"results":"130","hashOfConfig":"67"},{"size":1805,"mtime":1615050328724,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vxotki",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"145"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"136"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"136"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\ReactJs\\store\\src\\index.js",[],"C:\\ReactJs\\store\\src\\reportWebVitals.js",[],["274","275"],"C:\\ReactJs\\store\\src\\App.js",["276"],"import './App.css';\nimport { Suspense } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Page from './router/index';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport LoadingPage from './pages/LoadingPage';\n\nfunction App() {\n  const showPage = (Page) => {\n    var result = null;\n    if (Page.length > 0) {\n      result = Page.map((Page, index) => (\n        <Route\n          key={index}\n          exact={Page.exact}\n          path={Page.path}\n          render={props => <Page.main {...props} />}\n        />\n      ))\n    }\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Header></Header>\n        <Suspense fallback={LoadingPage}>\n          <Switch>\n            {showPage(Page)}\n          </Switch>\n          <Footer />\n        </Suspense>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\ReactJs\\store\\src\\components\\Header\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\Header\\register.jsx",["277"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    IconButton,\r\n    TextField,\r\n    Grid,\r\n    Button,\r\n    Link,\r\n    InputAdornment\r\n} from '@material-ui/core'\r\n\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { isEqual } from 'lodash';\r\nimport { registerValidationSchema } from './../../utils/yupValidationSchema';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { userSignUpRequest, userSignUpSuccess, userSignUpError } from './../../actions/user';\r\nimport userApi from './../../api/userApi';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        color: theme.palette.grey[500]\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    forgotPassword: {\r\n        textAlign: \"center\"\r\n    },\r\n    togglePassword: {\r\n        position: 'absolute',\r\n    }\r\n}));\r\n\r\n\r\nfunction RegisterDialog(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { open, onClose } = props;\r\n\r\n    const [showPassword, setShowPasword] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n        setShowPasword(false);\r\n        formik.resetForm();\r\n    }\r\n\r\n    const handleToggleShowPassword = () => {\r\n        setShowPasword(!showPassword);\r\n    }\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            fullname: ''\r\n        },\r\n        validationSchema: registerValidationSchema,\r\n        onSubmit: (values) => {\r\n            const { email, password, confirmPassword, fullname } = formik.values;\r\n            dispatch(userSignUpRequest());\r\n            userApi.signUp({email, password, confirmPassword, fullname})\r\n                .then( res => {\r\n                    dispatch(userSignUpSuccess(res.data));\r\n                }).then( res => {\r\n                    <Redirect to='/'></Redirect>\r\n                }).catch(err => {\r\n                    dispatch(userSignUpError(err.response.data));\r\n                })\r\n        }\r\n    })\r\n\r\n    const hasChanged = !isEqual(formik.values, formik.initialValues);\r\n    const hasErrors = Object.keys(formik.errors).length > 0;\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth=\"xs\">\r\n            <DialogTitle>Register\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        id=\"fullname\"\r\n                        label=\"Full Name\"\r\n                        name=\"fullname\"\r\n                        value={formik.values.fullname}\r\n                        error={formik.touched.fullname && Boolean(formik.errors.fullname)}\r\n                        helperText={formik.touched.fullname && formik.errors.fullname}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        value={formik.values.password}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleToggleShowPassword}\r\n                                    >\r\n                                        {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"confirmPassword\"\r\n                        label=\"Repeat Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        id=\"repeat-password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={formik.values.confirmPassword}\r\n                        error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                        helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleToggleShowPassword}\r\n                                    >\r\n                                        {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        disabled={hasErrors || !hasChanged}>\r\n                        Register\r\n                        </Button>\r\n                    <Grid justify=\"center\" container>\r\n                        <Grid item xs justify=\"center\" container>\r\n                            <Link href=\"#\" variant=\"body2\" underline=\"none\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default RegisterDialog;",["278","279"],"C:\\ReactJs\\store\\src\\components\\Header\\login.jsx",["280","281","282"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    IconButton,\r\n    TextField,\r\n    FormControlLabel,\r\n    Grid,\r\n    Checkbox,\r\n    Button,\r\n    Link,\r\n    InputAdornment\r\n} from '@material-ui/core'\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { isEqual } from 'lodash';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport userApi from './../../api/userApi';\r\nimport { userLoginSuccess, userLoginRequest, userLoginError} from './../../actions/user';\r\nimport {  useHistory } from 'react-router-dom';\r\n\r\nLoginDialog.propTypes = {\r\n\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        color: theme.palette.grey[500]\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    forgotPassword: {\r\n        textAlign: \"center\"\r\n    },\r\n    togglePassword: {\r\n        position: 'absolute',\r\n    }\r\n}))\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup.string('Enter you email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup.string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .required('Password is required'),\r\n})\r\n\r\nfunction LoginDialog(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { onClose, open } = props;\r\n\r\n    const tokenLocal = localStorage.getItem('token');\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [showPassword, setShowPasword] = useState(false);\r\n    const accessToken  = useSelector(state => state.user.userInfo);\r\n\r\n    if(tokenLocal || accessToken){\r\n        history.push('/');\r\n    }\r\n\r\n    const handleTooglePassword = () => {\r\n        setShowPasword(!showPassword);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n        formik.resetForm();\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { setSubmitting, setFieldError }) => {\r\n            const { email, password } = formik.values;\r\n            dispatch(userLoginRequest());\r\n            userApi.signIn({ email, password })\r\n                .then(res => {\r\n                    dispatch(userLoginSuccess(res.data));\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    // let { message } = err.response.data;\r\n                    // let code = err.response.status;\r\n\r\n                    // if (code === 401) {\r\n                    //     setFieldError(\"password\", message);\r\n                    // } else\r\n                    //     if (code === 404) {\r\n                    //         setFieldError(\"email\", message);\r\n                    //     }\r\n\r\n\r\n                });\r\n            setSubmitting(false);\r\n        }\r\n    })\r\n\r\n    const hasChanged = !isEqual(formik.values, formik.initialValues);\r\n    const hasErrors = Object.keys(formik.errors).length > 0;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog onClose={handleClose} open={open} maxWidth=\"xs\" fullWidth={true}>\r\n                <DialogTitle id=\"form-dialog-title\" className={classes.title}>LOGIN\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            value={formik.values.email}\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={formik.values.password}\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleTooglePassword}\r\n                                        >\r\n                                            {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <Button type=\"submit\"\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            className={classes.submit}\r\n                            disabled={hasErrors || !hasChanged}>\r\n                            Login\r\n                        </Button>\r\n\r\n                        <Grid justify=\"center\" container>\r\n                            <Grid item xs justify=\"center\" container>\r\n                                <Link href=\"#\" variant=\"body2\" underline=\"none\">\r\n                                    Forgot password?\r\n                            </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default LoginDialog;","C:\\ReactJs\\store\\src\\components\\Cart\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\Home\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\Product\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\Footer\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\LoadingBox\\index.jsx",[],["283","284"],"C:\\ReactJs\\store\\src\\components\\ProductCard\\index.jsx",[],"C:\\ReactJs\\store\\src\\store.js",[],"C:\\ReactJs\\store\\src\\reducers\\index.js",[],"C:\\ReactJs\\store\\src\\reducers\\product.js",[],"C:\\ReactJs\\store\\src\\pages\\HomePage.jsx",["285"],"C:\\ReactJs\\store\\src\\api\\productApi.js",[],"C:\\ReactJs\\store\\src\\api\\axiosClient.js",[],"C:\\ReactJs\\store\\src\\actions\\product.js",[],"C:\\ReactJs\\store\\src\\contants\\productContants.js",[],"C:\\ReactJs\\store\\src\\actions\\fetchProduct.js",[],"C:\\ReactJs\\store\\src\\components\\Paganation\\index.js",[],"C:\\ReactJs\\store\\src\\pages\\CartPage.jsx",[],"C:\\ReactJs\\store\\src\\reducers\\cart.js",["286","287","288","289","290","291"],"const initialState = {\r\n    items: localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : []\r\n}\r\n\r\nconst findIndexProduct = (cart, product) => {\r\n    var index = -1;\r\n    if (cart.length > 0) {\r\n        for (var i = 0; i < cart.length; i++) {\r\n            if (cart[i].product._id === product._id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return index;\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_PRODUCT_CART':\r\n            var { product, quantity } = action.payload;\r\n            var newProducts = [...state.items];\r\n            var index = findIndexProduct(newProducts, product);\r\n\r\n            if (index !== -1) {\r\n                newProducts[index].quantity += quantity;\r\n            } else {\r\n                newProducts.push({\r\n                    product,\r\n                    quantity\r\n                })\r\n            }\r\n            localStorage.setItem('cart', JSON.stringify(newProducts));\r\n            return {\r\n                ...state,\r\n                items: newProducts\r\n            }\r\n\r\n        case 'SUB_PRODUCT_CART':\r\n            var { product, quantity } = action.payload;\r\n            var newProducts = [...state.items];\r\n            var index = findIndexProduct(newProducts, product);\r\n\r\n            if (index !== -1) {\r\n                if (newProducts[index].quantity === 1) {\r\n                    newProducts.splice(index, 1);\r\n                } else {\r\n                    newProducts[index].quantity += quantity;\r\n                }\r\n            }\r\n            localStorage.setItem('cart', JSON.stringify(newProducts));\r\n            return {\r\n                ...state,\r\n                items: newProducts\r\n            }\r\n\r\n        case 'DELETE_PRODUCT_CART':\r\n            var newProducts = [...state.items];\r\n            var { product } = action.payload;\r\n            index = findIndexProduct(newProducts, product);\r\n            if (index !== -1) {\r\n                newProducts.splice(index, 1);\r\n            }\r\n            localStorage.setItem('cart', JSON.stringify(newProducts));\r\n            return {\r\n                ...state,\r\n                items: newProducts\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;","C:\\ReactJs\\store\\src\\actions\\cart.js",[],"C:\\ReactJs\\store\\src\\contants\\cartContants.js",[],"C:\\ReactJs\\store\\src\\components\\Cart\\CartItem.jsx",[],"C:\\ReactJs\\store\\src\\utils\\cart.js",[],"C:\\ReactJs\\store\\src\\components\\Alert\\index.jsx",["292"],"import { useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeSnackbar } from './../../actions/alert';\r\n\r\n\r\nfunction AlertPopUp() {\r\n\r\n    const alertMessage = useSelector(state => state.alert);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        const { open, message, level } = alertMessage;\r\n        if (open) {\r\n            enqueueSnackbar(message, {\r\n                variant: level,\r\n                onEntering: (event, myKey) => {\r\n                    const action = removeSnackbar();\r\n                    dispatch(action)\r\n                }\r\n            });\r\n        }\r\n    }, [alertMessage]);\r\n\r\n    return (\r\n        null\r\n    );\r\n}\r\n\r\nexport default AlertPopUp;","C:\\ReactJs\\store\\src\\reducers\\alert.js",[],"C:\\ReactJs\\store\\src\\contants\\alertContants.js",[],"C:\\ReactJs\\store\\src\\actions\\alert.js",[],"C:\\ReactJs\\store\\src\\reducers\\user.js",["293"],"import {\r\n    USER_SIGN_UP_REQUEST,\r\n    USER_SIGN_UP_SUCCESS,\r\n    USER_SIGN_UP_ERROR,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_ERROR,\r\n    USER_LOGOUT,\r\n    USER_UPLOAD_REQUEST,\r\n    USER_UPLOAD_SUCCESS,\r\n    USER_UPLOAD_ERROR\r\n} from './../contants/userContants';\r\n\r\nconst initialState = {\r\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    let newUserInfo = {};\r\n    switch (action.type) {\r\n\r\n        case USER_SIGN_UP_REQUEST:\r\n            return state;\r\n\r\n        case USER_SIGN_UP_SUCCESS:\r\n\r\n            newUserInfo = action.payload;\r\n            localStorage.setItem('userInfo', JSON.stringify(newUserInfo));\r\n            return {\r\n                ...state,\r\n                userInfo: newUserInfo\r\n            };\r\n\r\n        case USER_SIGN_UP_ERROR:\r\n            return state;\r\n\r\n        case USER_LOGIN_REQUEST:\r\n            return state;\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n\r\n            newUserInfo = action.payload;\r\n            localStorage.setItem('userInfo', JSON.stringify(newUserInfo));\r\n            return {\r\n                ...state,\r\n                userInfo: newUserInfo\r\n            };\r\n\r\n        case USER_LOGIN_ERROR:\r\n            return state;\r\n\r\n\r\n        case USER_LOGOUT:\r\n            localStorage.clear(\"userInfo\");\r\n            return {}\r\n\r\n        case USER_UPLOAD_REQUEST: \r\n            return state;\r\n        \r\n        case USER_UPLOAD_SUCCESS: \r\n            const  { image }  = action.payload;\r\n            newUserInfo = {...state.userInfo};\r\n            newUserInfo['image'] = image;\r\n            localStorage.setItem('userInfo', JSON.stringify(newUserInfo));\r\n            return {\r\n                ...state,\r\n                userInfo: newUserInfo\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","C:\\ReactJs\\store\\src\\contants\\userContants.js",[],"C:\\ReactJs\\store\\src\\api\\userApi.js",[],"C:\\ReactJs\\store\\src\\actions\\user.js",[],"C:\\ReactJs\\store\\src\\pages\\UserPage.jsx",[],"C:\\ReactJs\\store\\src\\components\\User\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\User\\UserForm.jsx",["294","295","296","297"],"import React, { useEffect} from 'react';\r\nimport { Grid, Typography, Button, RadioGroup, Radio, FormControlLabel, Paper } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {\r\n    fade,\r\n    withStyles,\r\n    makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport userApi from './../../api/userApi';\r\nimport { userUploadRequest, userUploadSuccess, userUploadError } from './../../actions/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.common.white,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: '400px',\r\n        padding: '5px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\n\r\nconst MobileInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.common.white,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: '300px',\r\n        padding: '5px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n        boxShadow: 'none',\r\n        textTransform: 'none',\r\n        fontSize: 16,\r\n        width: 95,\r\n        padding: '7px 12px',\r\n        border: '1px solid',\r\n        lineHeight: 1,\r\n        backgroundColor: '#0063cc',\r\n        borderColor: '#0063cc',\r\n        marginBottom: 5,\r\n        marginLeft: 5,\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#0069d9',\r\n            borderColor: '#0062cc',\r\n            boxShadow: 'none',\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#0062cc',\r\n            borderColor: '#005cbf',\r\n        },\r\n        '&:focus': {\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n        },\r\n    },\r\n})(Button);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: 25\r\n    },\r\n    container: {\r\n        backgroundColor: 'rgb(255, 255, 255)',\r\n        padding: theme.spacing(2),\r\n        minHeight: 470\r\n    },\r\n    mediaRoot: {\r\n        maxWidth: 200,\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    media: {\r\n        width: 180,\r\n        height: 100,\r\n    },\r\n}));\r\n\r\nfunction UserForm(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [file, setFile] = React.useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFile = (files) => {\r\n        setFile(files[0]);\r\n    }\r\n\r\n    const { userInfo } = props;\r\n\r\n    const onSubmitFile = (files) => {\r\n        const image = new FormData();\r\n        image.append(\"image\",file);\r\n        dispatch(userUploadRequest());\r\n        userApi.upLoad(userInfo._id, image)\r\n            .then(res => {\r\n                dispatch(userUploadSuccess(res.data))\r\n            }).catch(err => {\r\n                dispatch(userUploadError(err.response.data))\r\n            })\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item xs={12} lg={9} sm={9}>\r\n                <Paper className={classes.container}>\r\n                    <Typography color=\"textPrimary\" className={classes.title} variant=\"h6\">Thông tin tài khoản</Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={2}>\r\n                            <Typography color=\"textPrimary\">Họ tên</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <BootstrapInput defaultValue={userInfo.fullname} />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography color=\"textPrimary\">Avatar</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Card className={classes.mediaRoot}>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`http://localhost:4000/uploads/${userInfo.image}` || null}\r\n                                    title=\"Paella dish\"\r\n                                />\r\n                            </Card>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(true)}>\r\n                                Add Image\r\n                            </Button>\r\n                            <DropzoneDialog\r\n                                acceptedFiles={['image/*']}\r\n                                cancelButtonText={\"cancel\"}\r\n                                submitButtonText={\"submit\"}\r\n                                maxFileSize={5000000}\r\n                                filesLimit={1}\r\n                                open={open}\r\n                                onChange={(files) => handleFile(files)}\r\n                                onClose={() => setOpen(false)}\r\n                                onSave={(files) => onSubmitFile(files)}\r\n                                showPreviews={true}\r\n                                showFileNamesInPreview={true}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Typography color=\"textPrimary\">Email</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <BootstrapInput defaultValue={userInfo.email} readOnly />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Typography color=\"textPrimary\">Giới tính</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <RadioGroup row defaultValue=\"male\">\r\n                                <FormControlLabel value=\"male\" control={<Radio color=\"primary\" />} label=\"Nam\" />\r\n                                <FormControlLabel value=\"female\" control={<Radio color=\"primary\" />} label=\"Nữ\" />\r\n                            </RadioGroup>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Button variant=\"contained\" color=\"secondary\">Cập Nhập</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UserForm;","C:\\ReactJs\\store\\src\\components\\Fillter\\index.jsx",["298","299","300","301","302","303"],"C:\\ReactJs\\store\\src\\components\\Product\\Comment.jsx",[],"C:\\ReactJs\\store\\src\\components\\Product\\ComentItem.jsx",[],"C:\\ReactJs\\store\\src\\reducers\\products.js",[],"C:\\ReactJs\\store\\src\\actions\\comment.js",[],"C:\\ReactJs\\store\\src\\contants\\commentContants.js",[],"C:\\ReactJs\\store\\src\\api\\commentApi.js",[],"C:\\ReactJs\\store\\src\\reducers\\comment.js",[],"C:\\ReactJs\\store\\src\\router\\index.js",[],"C:\\ReactJs\\store\\src\\pages\\ProductPage.jsx",[],"C:\\ReactJs\\store\\src\\pages\\LoadingPage.jsx",[],"C:\\ReactJs\\store\\src\\utils\\yupValidationSchema.js",[],"C:\\ReactJs\\store\\src\\pages\\LoginPage.jsx",[],"C:\\ReactJs\\store\\src\\components\\Login\\index.jsx",[],"C:\\ReactJs\\store\\src\\pages\\RegisterPage.jsx",[],"C:\\ReactJs\\store\\src\\components\\Register\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\Loading\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\Skeleton\\ProductCardSkeleton.jsx",[],"C:\\ReactJs\\store\\src\\components\\User\\UserMenu.jsx",["304","305"],"import React from 'react';\r\nimport { Grid, List, ListItem, ListItemText, ListItemIcon, Paper } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userLogout } from '../../actions/user';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(8)\r\n    },\r\n    breadCumbsContainer: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        padding: theme.spacing(2),\r\n    },\r\n    menuContainer: {\r\n        minHeight: 500\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    dialogContainer: {\r\n        width: 300\r\n    }\r\n}))\r\n\r\n\r\nfunction UserMenu(props) {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(userLogout());\r\n        setOpen(false);\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item xs={12} lg={3} sm={3} className={classes.menuContainer}>\r\n                <Paper className={classes.menuContainer}>\r\n                    <List>\r\n                        <ListItem button>\r\n                            <ListItemIcon><PersonIcon /></ListItemIcon>\r\n                            <ListItemText primary='Thông tin tài khoản' />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><NotificationsActiveIcon /> </ListItemIcon>\r\n                            <ListItemText primary='Thông báo của tôi' />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><StorageIcon /></ListItemIcon>\r\n                            <ListItemText primary='Quản lý đơn hàng' />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><PaymentIcon /></ListItemIcon>\r\n                            <ListItemText primary='Thông tin thanh toán' />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><VisibilityIcon /></ListItemIcon>\r\n                            <ListItemText primary='Sản phẩm đã xem' />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><FavoriteIcon /></ListItemIcon>\r\n                            <ListItemText primary='Sản phẩm yêu thích' />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><CommentIcon /></ListItemIcon>\r\n                            <ListItemText primary='Nhận xét của tôi' />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><ContactSupportIcon /></ListItemIcon>\r\n                            <ListItemText primary='Hỏi đáp' />\r\n                        </ListItem>\r\n                        <ListItem button onClick={handleClickOpen}>\r\n                            <ListItemIcon><ExitToAppIcon /></ListItemIcon>\r\n                            <ListItemText primary='Đăng xuất' />\r\n                        </ListItem>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"draggable-dialog-title\"\r\n                            maxWidth='sm'\r\n                        >\r\n                            <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                                Confirm Logout\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                     Are you sure you want to log out?\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={handleLogOut} color=\"secondary\" variant=\"contained\">\r\n                                    Logout\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UserMenu;","C:\\ReactJs\\store\\src\\pages\\CheckOutPage.jsx",[],"C:\\ReactJs\\store\\src\\components\\CheckOut\\index.jsx",[],"C:\\ReactJs\\store\\src\\components\\CheckOut\\Review.jsx",[],"C:\\ReactJs\\store\\src\\components\\CheckOut\\AddressForm.jsx",["306"],"import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { listCountry } from './../../utils/country';\r\n\r\n\r\nfunction AddressForm(props) {\r\n\r\n    const [province, setProvince] = useState('');\r\n\r\n    const [district, setDistrict] = useState('');\r\n\r\n    const [ward, setWard] = useState('');\r\n\r\n    const [listDistrict, setListDistrict] = useState([]);\r\n\r\n    const [listWard, setListWard] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setProvince(event.target.value);\r\n    };\r\n\r\n    const handleChangeDistrict = (event) => {\r\n        setDistrict(event.target.value);\r\n    };\r\n\r\n    const handleChangeWard = (event) => {\r\n        setWard(event.target.value);\r\n    }\r\n\r\n    const getItems = (arr, id) => {\r\n        return arr.find(x => x.Id === id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        var newListDistrict = getItems(listCountry, province);\r\n        if (newListDistrict) {\r\n            setListDistrict(newListDistrict.Districts);\r\n        }\r\n    }, [province])\r\n\r\n    useEffect(() => {\r\n        if (district) {\r\n            var newListWard = getItems(listDistrict, district);\r\n            if (newListWard) {\r\n                setListWard(newListWard.Wards);\r\n            }\r\n        }\r\n    }, [district])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n        </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"First name\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Last name\"\r\n                        fullWidth\r\n                        autoComplete=\"family-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"address1\"\r\n                        name=\"address1\"\r\n                        label=\"Address line 1\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-line1\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-level2\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        label=\"Country\"\r\n                        fullWidth\r\n                        select\r\n                        value={province}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {listCountry.map((province, index) => (\r\n                            <MenuItem key={province.Id} value={province.Id}>\r\n                                {province.Name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"district\"\r\n                        name=\"district\"\r\n                        label=\"district\"\r\n                        fullWidth\r\n                        select\r\n                        value={district}\r\n                        onChange={handleChangeDistrict}\r\n                    >\r\n                        {listDistrict.map((district, index) => (\r\n                            <MenuItem key={district.Id} value={district.Id}>\r\n                                {district.Name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"ward\"\r\n                        name=\"ward\"\r\n                        label=\"Ward\"\r\n                        fullWidth\r\n                        select\r\n                        value={ward}\r\n                        onChange={handleChangeWard}\r\n                    >\r\n                        {listWard.map((ward, index) => (\r\n                            <MenuItem key={ward.Id} value={ward.Id}>\r\n                                {ward.Name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                        label=\"Use this address for payment details\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddressForm;","C:\\ReactJs\\store\\src\\components\\CheckOut\\PaymentForm.jsx",[],"C:\\ReactJs\\store\\src\\utils\\country.js",[],"C:\\ReactJs\\store\\src\\pages\\SearchPage.jsx",["307","308","309","310","311"],{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","severity":1,"message":"317","line":23,"column":28,"nodeType":"318","endLine":23,"endColumn":52},{"ruleId":"319","severity":1,"message":"320","line":18,"column":13,"nodeType":"321","messageId":"322","endLine":18,"endColumn":16},{"ruleId":"312","replacedBy":"323"},{"ruleId":"314","replacedBy":"324"},{"ruleId":"319","severity":1,"message":"325","line":12,"column":5,"nodeType":"321","messageId":"322","endLine":12,"endColumn":21},{"ruleId":"319","severity":1,"message":"326","line":14,"column":5,"nodeType":"321","messageId":"322","endLine":14,"endColumn":13},{"ruleId":"319","severity":1,"message":"327","line":24,"column":46,"nodeType":"321","messageId":"322","endLine":24,"endColumn":60},{"ruleId":"312","replacedBy":"328"},{"ruleId":"314","replacedBy":"329"},{"ruleId":"319","severity":1,"message":"330","line":22,"column":9,"nodeType":"321","messageId":"322","endLine":22,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":40,"column":19,"nodeType":"321","messageId":"333","endLine":40,"endColumn":26},{"ruleId":"331","severity":1,"message":"334","line":40,"column":28,"nodeType":"321","messageId":"333","endLine":40,"endColumn":36},{"ruleId":"331","severity":1,"message":"335","line":41,"column":17,"nodeType":"321","messageId":"333","endLine":41,"endColumn":28},{"ruleId":"331","severity":1,"message":"336","line":42,"column":17,"nodeType":"321","messageId":"333","endLine":42,"endColumn":22},{"ruleId":"331","severity":1,"message":"335","line":58,"column":17,"nodeType":"321","messageId":"333","endLine":58,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":59,"column":19,"nodeType":"321","messageId":"333","endLine":59,"endColumn":26},{"ruleId":"337","severity":1,"message":"338","line":25,"column":8,"nodeType":"339","endLine":25,"endColumn":22,"suggestions":"340"},{"ruleId":"319","severity":1,"message":"341","line":11,"column":5,"nodeType":"321","messageId":"322","endLine":11,"endColumn":22},{"ruleId":"319","severity":1,"message":"342","line":1,"column":17,"nodeType":"321","messageId":"322","endLine":1,"endColumn":26},{"ruleId":"319","severity":1,"message":"343","line":14,"column":23,"nodeType":"321","messageId":"322","endLine":14,"endColumn":34},{"ruleId":"319","severity":1,"message":"344","line":55,"column":7,"nodeType":"321","messageId":"322","endLine":55,"endColumn":18},{"ruleId":"319","severity":1,"message":"345","line":90,"column":7,"nodeType":"321","messageId":"322","endLine":90,"endColumn":22},{"ruleId":"319","severity":1,"message":"342","line":1,"column":27,"nodeType":"321","messageId":"322","endLine":1,"endColumn":36},{"ruleId":"319","severity":1,"message":"346","line":4,"column":5,"nodeType":"321","messageId":"322","endLine":4,"endColumn":17},{"ruleId":"319","severity":1,"message":"347","line":5,"column":5,"nodeType":"321","messageId":"322","endLine":5,"endColumn":9},{"ruleId":"319","severity":1,"message":"348","line":11,"column":10,"nodeType":"321","messageId":"322","endLine":11,"endColumn":17},{"ruleId":"319","severity":1,"message":"349","line":12,"column":10,"nodeType":"321","messageId":"322","endLine":12,"endColumn":21},{"ruleId":"319","severity":1,"message":"350","line":44,"column":10,"nodeType":"321","messageId":"322","endLine":44,"endColumn":18},{"ruleId":"319","severity":1,"message":"351","line":21,"column":8,"nodeType":"321","messageId":"322","endLine":21,"endColumn":21},{"ruleId":"319","severity":1,"message":"352","line":22,"column":10,"nodeType":"321","messageId":"322","endLine":22,"endColumn":18},{"ruleId":"337","severity":1,"message":"353","line":56,"column":8,"nodeType":"339","endLine":56,"endColumn":18,"suggestions":"354"},{"ruleId":"319","severity":1,"message":"355","line":3,"column":20,"nodeType":"321","messageId":"322","endLine":3,"endColumn":26},{"ruleId":"319","severity":1,"message":"347","line":4,"column":3,"nodeType":"321","messageId":"322","endLine":4,"endColumn":7},{"ruleId":"319","severity":1,"message":"356","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":17},{"ruleId":"337","severity":1,"message":"357","line":54,"column":6,"nodeType":"339","endLine":54,"endColumn":38,"suggestions":"358"},{"ruleId":"337","severity":1,"message":"359","line":54,"column":7,"nodeType":"360","endLine":54,"endColumn":27},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],"react/jsx-pascal-case","Imported JSX component main must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'yup' is defined but never used.","Identifier","unusedVar",["361"],["362"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'userLoginError' is defined but never used.",["361"],["362"],"'query' is assigned a value but never used.","no-redeclare","'product' is already defined.","redeclared","'quantity' is already defined.","'newProducts' is already defined.","'index' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'enqueueSnackbar'. Either include them or remove the dependency array.","ArrayExpression",["363"],"'USER_UPLOAD_ERROR' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'MobileInput' is assigned a value but never used.","'BootstrapButton' is assigned a value but never used.","'NativeSelect' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'useDispatch' is defined but never used.","'useQuery' is defined but never used.","'useMediaQuery' is defined but never used.","'useTheme' is defined but never used.","React Hook useEffect has a missing dependency: 'listDistrict'. Either include it or remove the dependency array.",["364"],"'Router' is defined but never used.","'PropTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'filters' and 'query'. Either include them or remove the dependency array. You can also do a functional update 'setFilters(f => ...)' if you only need 'filters' in the 'setFilters' call.",["365"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},"Update the dependencies array to be: [alertMessage, dispatch, enqueueSnackbar]",{"range":"372","text":"373"},"Update the dependencies array to be: [district, listDistrict]",{"range":"374","text":"375"},"Update the dependencies array to be: [dispatch, filters, query]",{"range":"376","text":"377"},[741,755],"[alertMessage, dispatch, enqueueSnackbar]",[1547,1557],"[district, listDistrict]",[1267,1299],"[dispatch, filters, query]"]